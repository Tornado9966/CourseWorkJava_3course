# ==================
# SQL QUERIES
# ==================

# ==================
# UserDaoImpl
# ==================

user.search-1 = SELECT U.id, U.firstname, U.lastname, U.username, U.image, U.password, U.email, U.registr_date, U.activate_link, U.status_id, US.name as status_name, U.role_id, R.name as role_name \
  FROM users U INNER JOIN user_status US ON U.status_id = US.id \
               INNER JOIN role R ON R.id = U.role_id \
  WHERE (U.username LIKE ? OR U.firstname LIKE ? OR U.lastname LIKE ?) AND U.role_id < ?

user.search-2 = SELECT U.id, U.firstname, U.lastname, U.username, U.image, U.password, U.email, U.registr_date, U.activate_link, U.status_id, US.name as status_name, U.role_id, R.name as role_name \
  FROM users U INNER JOIN user_status US ON U.status_id = US.id \
               INNER JOIN role R ON R.id = U.role_id \
  WHERE (U.username LIKE ? OR U.firstname LIKE ? OR U.lastname LIKE ?) AND U.role_id = 1

user.save = INSERT INTO users(firstname, lastname, username, password, email, image, registr_date, activate_link, status_id, role_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

user.update = UPDATE USERS set firstname = ? , lastname = ? , username = ? , password = ? , email = ? , image = ? , registr_date = ? , activate_link = ? , status_id = ? , role_id = ? \
  WHERE id = ?

user.del = DELETE from USERS where id = ?

user.get = SELECT U.id, U.firstname, U.lastname, U.username, U.image, U.password, U.email, U.registr_date, U.activate_link, U.status_id, US.name as status_name, U.role_id, R.name as role_name \
  FROM users U INNER JOIN user_status US ON U.status_id = US.id \
               INNER JOIN role R ON R.id = U.role_id \
  WHERE U.id = ?

user.find = SELECT U.id, U.firstname, U.lastname, U.username, U.image, U.password, U.email, U.registr_date, U.activate_link, U.status_id, US.name as status_name, U.role_id, R.name as role_name \
  FROM users U INNER JOIN user_status US ON U.status_id = US.id \
               INNER JOIN role R ON R.id = U.role_id \
  WHERE U.username = ?

user.get_password = SELECT PASSWORD FROM users WHERE USERNAME = ?

user.get_by_token = SELECT U.id, U.firstname, U.lastname, U.username, U.image, U.password, U.email, U.registr_date, U.activate_link, U.status_id, US.name as status_name, U.role_id, R.name as role_name \
  FROM users U INNER JOIN user_status US ON U.status_id = US.id \
               INNER JOIN role R ON R.id = U.role_id \
  WHERE U.activate_link = ?

user.activate = UPDATE users set status_id = 2 WHERE activate_link = ?

user.check_token = SELECT ? IN (SELECT activate_link FROM users)

set.user.status = UPDATE users set status_id = ? WHERE id = ?

# ==================
# UserInviteDaoImpl
# ==================

invite.send = INSERT INTO friend_to(activated, invite_text, invite_date, user_id_from, user_id_to) VALUES (?, ?, ?, ?, ?)

invite.get = SELECT F.id, F.invite_text, U.username \
  FROM friend_to F INNER JOIN users U ON U.id = F.user_id_from \
  WHERE F.user_id_to = ? AND F.activated = false

invite.get_friends = SELECT id, username \
  FROM users \
  WHERE id IN (SELECT user_id_from \
  FROM friend_to \
  WHERE user_id_to = ? AND activated = true) OR id IN (SELECT user_id_to \
  FROM friend_to \
  WHERE user_id_from = ? AND activated = true)

invite.accept = UPDATE friend_to SET activated = ? WHERE id = ?

invite.decline = DELETE FROM friend_to WHERE id = ?

invite.delete_friend = DELETE FROM friend_to \
  WHERE user_id_from = ? AND user_id_to = ? OR user_id_to = ? AND user_id_from = ?