{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/aboutus/aboutus.component.ts","webpack:///src/app/aboutus/aboutus.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authorization/authorization.component.ts","webpack:///src/app/authorization/authorization.component.html","webpack:///src/app/components/my-loader/my-loader.component.ts","webpack:///src/app/components/my-loader/my-loader.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/friends/friends.component.ts","webpack:///src/app/friends/friends.component.html","webpack:///src/app/friends/user-invite-card/user-invite-card.component.ts","webpack:///src/app/friends/user-invite-card/user-invite-card.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/interceptors/loader-interceptor.service.ts","webpack:///src/app/news/news.component.ts","webpack:///src/app/news/news.component.html","webpack:///src/app/registration/_helpers/must-match.validator.ts","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/services/loader.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/user-card/user-card.component.ts","webpack:///src/app/user-card/user-card.component.html","webpack:///src/app/user-profile/user-profile.component.ts","webpack:///src/app/user-profile/user-profile.component.html","webpack:///src/app/util/hashBcrypt.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutusComponent","selector","templateUrl","styleUrls","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","imports","AppComponent","http","userService","router","title","notifications","localStorage","removeItem","logout","subscribe","_","navigateByUrl","user","role","name","authenticated","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthorizationComponent","fb","app","error","userForm","group","username","required","minLength","password","login","get","value","res","MyLoaderComponent","loaderService","isLoading","v","console","log","loading","$event","DashboardComponent","location","route","tab","isVisible","searchUserTerms","snapshot","paramMap","users$","pipe","obj","searchUsers","term","next","editOnly","changeTab","firstName","lastName","FriendsComponent","userInvites","friendsList","getUserInvites","getFriends","getUserInvite","getFriendsList","UserInviteCardComponent","onChanged","nameButtonAccept","nameButtonDecline","clicked","acceptUserInvite","userInvite","declineUserInvite","action","deleteFriendFromList","userIdFrom","response","HomeComponent","greeting","LoaderInterceptor","requests","i","indexOf","splice","length","push","create","observer","subscription","handle","event","removeRequest","err","complete","unsubscribe","NewsComponent","sanitizer","displayURL","getSantizeUrl","url","bypassSecurityTrustResourceUrl","MustMatchValidator","form","control","controls","matchingControl","confirmPassword","setErrors","mustMatch","RegistrationComponent","email","message","registrationForm","firstname","lastname","validators","passwordConfirming","hash","reset","signUp","onSubmit","LoaderService","providedIn","UserService","getItem","JSON","parse","userUrl","token","headers","set","getToken","handleError","put","post","responseType","setItem","stringify","operation","roleId","trim","stausId","userId","undefined","UserCardComponent","inviteForm","nameSendButton","emit","sendUserInvite","inviteText","userIdTo","data","UserProfileComponent","setUserForm","disabled","userRole","setProperties","setValidators","clearValidators","updateValueAndValidity","clearMessages","setMaininfo","createUser","checkPassword","updateUser","dirty","compare","deleteUser","resp","statusId","status","setStatus","submit","HashBcrypt","rounds","salt","pass","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-aboutus',\r\n  templateUrl: './aboutus.component.html',\r\n  styleUrls: ['./aboutus.component.css']\r\n})\r\nexport class AboutusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1><strong>Курсову роботу виконали:</strong></h1>\r\n<h3>студенти ІІІ курсу національного технічного університету України</h3>\r\n<h3>«Київський політехнічний інститут імені Ігоря Сікорського»</h3>\r\n<br>\r\n<h3 id=\"ourName\"><em>Герега Б.Д. та Джаноянц В.О</em></h3>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AuthorizationComponent} from \"./authorization/authorization.component\";\r\nimport {HomeComponent} from \"./home/home.component\";\r\nimport {AppComponent} from \"./app.component\";\r\nimport {RegistrationComponent} from \"./registration/registration.component\";\r\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\r\nimport {UserProfileComponent} from \"./user-profile/user-profile.component\";\r\nimport {AboutusComponent} from \"./aboutus/aboutus.component\";\r\nimport {NewsComponent} from \"./news/news.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: '/home'},\r\n  { path: 'dashboard/:tab', component: DashboardComponent},\r\n  { path: 'dashboard', pathMatch: 'full', redirectTo: '/dashboard/Profile'},\r\n  { path: 'home', component: HomeComponent},\r\n  { path: 'login', component: AuthorizationComponent},\r\n  { path: 'signup', component: RegistrationComponent },\r\n  { path: 'profile', component: UserProfileComponent },\r\n  { path: 'aboutus', component: AboutusComponent },\r\n  { path: 'news', component: NewsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit, OnDestroy, HostListener} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport { catchError, tap, finalize } from 'rxjs/operators';\r\nimport {UserService} from './services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'ui-app';\r\n  notifications: Notification[] = [];\r\n\r\n  constructor(private http: HttpClient,\r\n              private userService: UserService,\r\n              private router: Router ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  @HostListener('window:beforeunload')\r\n\r\n  ngOnDestroy(): void {\r\n    localStorage.removeItem('user');\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.userService.logout().subscribe(\r\n      _ => this.router.navigateByUrl('/login'));\r\n  }\r\ngetRole() {\r\n    return this.userService.user.role.name;\r\n}\r\n  authenticated() {\r\n    return this.userService.authenticated;\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md fixed-top\">\r\n  <a class=\"navbar-brand\">Our Coursework</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\r\n          aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/home\">Home</a>\r\n      </li>\r\n      <li *ngIf=\"!authenticated()\" class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/login\">Login</a>\r\n      </li>\r\n      <li *ngIf=\"authenticated()\" class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/dashboard\">Dashboard</a>\r\n      </li>\r\n    </ul>\r\n    <form class=\"form-inline  mt-2 mt-md-0\">\r\n      <a *ngIf=\"authenticated()\" class=\"btn bg-secondary btn-sm\"  (click)=\"logout()\">Logout</a>\r\n    </form>\r\n  </div>\r\n</nav>\r\n<router-outlet></router-outlet>\r\n<app-my-loader></app-my-loader>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {AuthorizationComponent} from './authorization/authorization.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {UserProfileComponent} from './user-profile/user-profile.component';\r\nimport {UserCardComponent} from './user-card/user-card.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {LoaderService} from './services/loader.service';\r\nimport {LoaderInterceptor} from './interceptors/loader-interceptor.service';\r\nimport {MyLoaderComponent} from './components/my-loader/my-loader.component';\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {FriendsComponent} from './friends/friends.component';\r\nimport {UserInviteCardComponent} from './friends/user-invite-card/user-invite-card.component';\r\nimport { AboutusComponent } from './aboutus/aboutus.component';\r\nimport { NewsComponent } from './news/news.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AuthorizationComponent,\r\n    HomeComponent,\r\n    RegistrationComponent,\r\n    DashboardComponent,\r\n    UserProfileComponent,\r\n    UserCardComponent,\r\n    MyLoaderComponent,\r\n    FriendsComponent,\r\n    UserInviteCardComponent,\r\n    AboutusComponent,\r\n    NewsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    DragDropModule,\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ],\r\n  providers: [\r\n    LoaderService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { User } from '../entities/user';\r\nimport {UserService} from '../services/user.service';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {tap} from \"rxjs/operators\";\r\nimport {Observable} from \"rxjs\";\r\nimport {stringify} from \"querystring\";\r\nimport * as bcrypt from 'bcryptjs';\r\nimport {HashBcrypt} from \"../util/hashBcrypt\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-authorization',\r\n  templateUrl: './authorization.component.html',\r\n  styleUrls: ['./authorization.component.css']\r\n})\r\nexport class AuthorizationComponent implements OnInit {\r\n\r\n\r\n  error = false;\r\n\r\n  userForm: FormGroup = this.fb.group({\r\n    username: ['', [Validators.required, Validators.minLength(3)]],\r\n    password: ['', [Validators.required, Validators.minLength(3)]]\r\n  });\r\n\r\n\r\n  constructor(private fb: FormBuilder, private app: UserService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n  login() {\r\n    this.app.login({username: this.userForm.get('username').value,\r\n      password: this.userForm.get('password').value}).\r\n    subscribe(\r\n      res => {this.router.navigateByUrl('/dashboard');},\r\n      error => {this.error = error});\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<section   class=\"min-vh-100\" id=\"cover\">\r\n  <div class=\"container\">\r\n      <h1>USER LOGIN</h1>\r\n      <div class=\"row text-white\">\r\n          <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n              <img  src=\"https://img.icons8.com/plasticine/100/000000/user-male-circle.png\"/>\r\n                    <div class=\"alert alert-danger\" [hidden]=\"!error\">\r\n                      There was a problem logging in. Please try again.\r\n                    </div>\r\n              <form [formGroup]=\"userForm\" (ngSubmit)=\"login()\">\r\n                  <div class=\"form-group \">\r\n                      <input type=\"text\" formControlName=\"username\"  class=\"form-control text-center\"  placeholder=\"USERNAME\" required maxlength=\"20\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                      <input type=\"password\" formControlName=\"password\" class=\"form-control text-center\" id=\"exampleInputPassword1\" placeholder=\"PASSWORD\" required maxlength=\"20\">\r\n                  </div>\r\n                  <button  class=\"btn btn-secondary btn-lg btn-block\" type=\"submit\" [disabled]=\"!userForm.valid\">LOGIN</button>\r\n              </form>\r\n              <div class=\"text-center\">\r\n                  <a routerLinkActive=\"active\" routerLink=\"/signup\"><label class=\"btn\" >Sign Up</label></a>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</section>\r\n","// my-loader.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LoaderService } from '../../services/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-my-loader',\r\n  templateUrl: './my-loader.component.html',\r\n  styleUrls: ['./my-loader.component.css']\r\n})\r\nexport class MyLoaderComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n\r\n  constructor(private loaderService: LoaderService) {\r\n\r\n    this.loaderService.isLoading.subscribe((v) => {\r\n      console.log(v);\r\n      this.loading = v;\r\n    });\r\n\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<!-- my-loader.component.html -->\r\n<div class=\"progress-loader\" [hidden]=\"!loading\">\r\n  <div class=\"loading-spinner\">\r\n    <img src=\"../../../assets/loader_brainduel.svg\">    <span class=\"loading-message\">Please wait...</span>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, Input, ViewChild, AfterViewChecked, AfterViewInit} from '@angular/core';\r\nimport {UserService} from '../services/user.service';\r\nimport { User } from '../entities/user';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {Location} from '@angular/common';\r\nimport {UserCardComponent} from '../user-card/user-card.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  tab = '';\r\n  user: User;\r\n  users$: Observable<User[]>;\r\n  isVisible = true;\r\n\r\n\r\n  private searchUserTerms = new Subject<any>();\r\n  @ViewChild(UserCardComponent, {static: false}) userCardChild: UserCardComponent;\r\n\r\n  constructor(private userService: UserService, private location: Location,\r\n              private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.tab = this.route.snapshot.paramMap.get('tab');\r\n    this.user = this.tab === 'Profile' ? this.userService.user : {role: {}} as User;\r\n    this.users$ = this.searchUserTerms.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged(),\r\n      // switch to new search observable each time the term changes\r\n      switchMap((obj) => this.userService.searchUsers(obj.role, obj.term)),\r\n    );\r\n\r\n  }\r\n\r\n  search(term: string): void {\r\n    this.isVisible = false;\r\n    this.searchUserTerms.next({role: this.userService.user.role.id, term: term});\r\n  }\r\n\r\n  profileSet( editOnly?: boolean, user?: User) {\r\n    this.user = (user ? user : {role: {}} as User);\r\n    this.changeTab(editOnly ? 'AddProfile' : 'Profile');\r\n  }\r\n\r\n  changeTab(tab: string) {\r\n    this.tab = tab;\r\n    this.router.navigateByUrl(`dashboard/${tab}`);\r\n    this.isVisible = true;\r\n  }\r\n\r\n  getUser() {\r\n    return this.userService.user;\r\n  }\r\n  getUserName() {\r\n    return this.userService.user.firstName;\r\n  }\r\n  getUserLastName() {\r\n    return this.userService.user.lastName;\r\n  }\r\n  getUserRole() {\r\n    return this.userService.user.role.name;\r\n  }\r\n\r\n\r\n}\r\n","<head>\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css\">\r\n</head>\r\n<section   class=\"min-vh-100\" id=\"cover\">\r\n  <div class=\"container-fluid text-white\">\r\n    <div class=\"row mt-2\">\r\n      <nav class=\"col-md-3 col-lg-3 col-sm-2  d-none d-md-block sidebar navbar-expand-md\">\r\n        <div class=\"sidebar-sticky\">\r\n          <img  src=\"https://img.icons8.com/plasticine/100/000000/user-male-circle.png\"/>\r\n          <h5>\r\n            <span class=\"badge badge-light\">{{getUserName()}} {{getUserLastName()}}</span>\r\n          </h5>\r\n          <ul class=\"nav flex-column\">\r\n            <li *ngIf=\"getUserRole()==='user' || getUserRole()==='super admin'\" class=\"nav-item border-bottom\">\r\n              <a class=\"nav-link btn\" (click)=\"profileSet(false, getUser())\">\r\n                <span data-feather=\"users\"></span>\r\n                <strong>Profile</strong>\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 152.9 43.4\" style=\"enable-background:new 0 0 152.9 43.4;\" xml:space=\"preserve\">\r\n                <path d=\"M151.9,13.6c0,0,3.3-9.5-85-8.3c-97,1.3-58.3,29-58.3,29s9.7,8.1,69.7,8.1c68.3,0,69.3-23.1,69.3-23.1 s1.7-10.5-14.7-18.4\"/>\r\n                </svg>\r\n              </a>\r\n            </li>\r\n            <li *ngIf=\"getUserRole()==='user'\" class=\"nav-item border-bottom\">\r\n              <a class=\"nav-link btn\" (click)=\"changeTab('Friends')\">\r\n                <strong>Friends</strong>\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 152.9 43.4\" style=\"enable-background:new 0 0 152.9 43.4;\" xml:space=\"preserve\">\r\n                <path d=\"M151.9,13.6c0,0,3.3-9.5-85-8.3c-97,1.3-58.3,29-58.3,29s9.7,8.1,69.7,8.1c68.3,0,69.3-23.1,69.3-23.1 s1.7-10.5-14.7-18.4\"/>\r\n                </svg>\r\n              </a>\r\n            </li>\r\n            <li *ngIf=\"getUserRole()=='moderator'\"  class=\"nav-item border-bottom\">\r\n              <a class=\"nav-link btn\"  (click)=\"changeTab('Users')\">\r\n                <strong>Users</strong>\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 152.9 43.4\" style=\"enable-background:new 0 0 152.9 43.4;\" xml:space=\"preserve\">\r\n                <path d=\"M151.9,13.6c0,0,3.3-9.5-85-8.3c-97,1.3-58.3,29-58.3,29s9.7,8.1,69.7,8.1c68.3,0,69.3-23.1,69.3-23.1 s1.7-10.5-14.7-18.4\"/>\r\n                </svg>\r\n              </a>\r\n            </li>\r\n            <li *ngIf=\"getUserRole()=='admin'\"  class=\"nav-item border-bottom\">\r\n              <a class=\"nav-link btn\"  (click)=\"changeTab('Moderators-Users')\">\r\n                <strong>Moderators/Users</strong>\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 152.9 43.4\" style=\"enable-background:new 0 0 152.9 43.4;\" xml:space=\"preserve\">\r\n                <path d=\"M151.9,13.6c0,0,3.3-9.5-85-8.3c-97,1.3-58.3,29-58.3,29s9.7,8.1,69.7,8.1c68.3,0,69.3-23.1,69.3-23.1 s1.7-10.5-14.7-18.4\"/>\r\n                </svg>\r\n              </a>\r\n            </li>\r\n            <li *ngIf=\"getUserRole()=='super admin'\" class=\"nav-item border-bottom\">\r\n              <a class=\"nav-link btn\"  (click)=\"changeTab('Admins-Moderators-Users')\">\r\n                <strong > Admins/Moderators/Users</strong>\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 152.9 43.4\" style=\"enable-background:new 0 0 152.9 43.4;\" xml:space=\"preserve\">\r\n                <path d=\"M151.9,13.6c0,0,3.3-9.5-85-8.3c-97,1.3-58.3,29-58.3,29s9.7,8.1,69.7,8.1c68.3,0,69.3-23.1,69.3-23.1 s1.7-10.5-14.7-18.4\"/>\r\n                </svg>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item border-bottom\">\r\n              <a class=\"nav-link btn\" (click)=\"changeTab('News')\">\r\n                <strong>News</strong>\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 152.9 43.4\" style=\"enable-background:new 0 0 152.9 43.4;\" xml:space=\"preserve\">\r\n                <path d=\"M151.9,13.6c0,0,3.3-9.5-85-8.3c-97,1.3-58.3,29-58.3,29s9.7,8.1,69.7,8.1c68.3,0,69.3-23.1,69.3-23.1 s1.7-10.5-14.7-18.4\"/>\r\n                </svg>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item border-bottom\">\r\n              <a class=\"nav-link btn\" (click)=\"changeTab('AboutUs')\">\r\n                <strong>About us</strong>\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 152.9 43.4\" style=\"enable-background:new 0 0 152.9 43.4;\" xml:space=\"preserve\">\r\n                <path d=\"M151.9,13.6c0,0,3.3-9.5-85-8.3c-97,1.3-58.3,29-58.3,29s9.7,8.1,69.7,8.1c68.3,0,69.3-23.1,69.3-23.1 s1.7-10.5-14.7-18.4\"/>\r\n                </svg>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-9 px-1 align-self-start\" >\r\n        <div *ngIf=\"tab === 'Users' || tab === 'Friends' || tab === 'Admins-Moderators-Users' || tab==='Moderators-Users' \" class=\" main-frame container-fluid my-5 \">\r\n          <form class=\"form-inline ml-3 my-2 my-lg-0\" >\r\n            <input #searchBox id=\"search-box\"  class=\"form-control my-2\" type=\"text\" placeholder=\"Search\" style=\"width: 80%\">\r\n            <button for=\"search-box\" class=\"btn btn-secondary my-2 my-sm-0\" (click)=\"search(searchBox.value)\" type=\"submit\" style=\"width: auto\">Search</button>\r\n            <button *ngIf=\"getUserRole()==='admin' || getUserRole()==='super admin'\" class=\"btn btn-success my-2 mx-auto my-sm-0\"\r\n                    (click)=\"profileSet(true)\"  style=\"width: auto\">Add</button>\r\n          </form>\r\n          <div>\r\n            <app-user-card *ngFor=\"let user of users$ | async\" (onChanged)=\"profileSet(false, $event)\" [user]=\"user\"></app-user-card>\r\n          </div>\r\n          <div *ngIf=\"tab === 'Friends'\">\r\n            <app-friends></app-friends>\r\n          </div>\r\n        </div>\r\n        <!--Profile-->\r\n\r\n        <app-user-profile *ngIf=\"tab === 'Profile' || tab === 'AddProfile'\" [user]=\"user\" [editOnly]=\"tab === 'Profile'? false : true\" ></app-user-profile>\r\n        <app-aboutus *ngIf=\"tab === 'AboutUs'\"></app-aboutus>\r\n        <app-news *ngIf=\"tab === 'News'\"></app-news>\r\n\r\n      </main>\r\n    </div>\r\n  </div>\r\n\r\n</section>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {UserInvite} from \"../entities/user-invite\";\r\nimport {UserService} from \"../services/user.service\";\r\n\r\n@Component({\r\n  selector: 'app-friends',\r\n  templateUrl: './friends.component.html',\r\n  styleUrls: ['./friends.component.css']\r\n})\r\n\r\nexport class FriendsComponent implements OnInit {\r\n  userInvites: UserInvite[] = [];\r\n  friendsList: UserInvite[] = [];\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUserInvites();\r\n    this.getFriends();\r\n  }\r\n\r\n  getUserInvites(): void {\r\n    this.userService.getUserInvite().subscribe(userInvites => {\r\n      this.userInvites = userInvites\r\n      console.log(userInvites);\r\n    })\r\n  }\r\n\r\n  getFriends(): void {\r\n    this.userService.getFriendsList().subscribe(friendsList => {\r\n      this.friendsList = friendsList;\r\n    })\r\n  }\r\n}\r\n","<div class=\"container d-flex justify-content-left\">\r\n  <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n    Invites <span class=\"badge badge-light\">{{userInvites.length}}</span>\r\n    <span class=\"sr-only\">unread messages</span>\r\n  </button>\r\n</div>\r\n<div class=\"collapse\" id=\"collapseExample\">\r\n  <app-user-invite-card *ngFor=\"let userInvite of userInvites\" [userInvite]=\"userInvite\" [isFriendList]=\"false\"></app-user-invite-card>\r\n</div>\r\n\r\n<div *ngIf=\"friendsList.length > 0; else elseBlock\">\r\n  <h2>Friends</h2>\r\n  <div class=\"d-flex flex-row\">\r\n    <app-user-invite-card *ngFor=\"let friend of friendsList\" [userInvite]=\"friend\" [isFriendList]=\"true\"></app-user-invite-card>\r\n  </div>\r\n  </div>\r\n<ng-template #elseBlock>\r\n  <h2>No friends to show</h2>\r\n</ng-template>\r\n\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {UserInvite} from \"../../entities/user-invite\";\r\nimport {UserService} from \"../../services/user.service\";\r\n\r\n@Component({\r\n  selector: 'app-user-invite-card',\r\n  templateUrl: './user-invite-card.component.html',\r\n  styleUrls: ['./user-invite-card.component.css']\r\n})\r\nexport class UserInviteCardComponent implements OnInit {\r\n  @Input() userInvite: UserInvite;\r\n  @Input() isFriendList: boolean;\r\n  @Output()\r\n  onChanged = new EventEmitter<UserInvite>();\r\n  nameButtonAccept = 'Accept';\r\n  nameButtonDecline = 'Decline';\r\n  clicked = false;\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  acceptUserInvite(): void {\r\n    this.userService.acceptUserInvite(this.userInvite.id).subscribe(userInvites => {\r\n      console.log(userInvites);\r\n    });\r\n  }\r\n\r\n  declineUserInvite(): void {\r\n    this.userService.declineUserInvite(this.userInvite.id).subscribe(userInvites => {\r\n      console.log(userInvites);\r\n    });\r\n  }\r\n\r\n  onInviteAction(action: string) {\r\n    this.clicked = true;\r\n    if (action === 'Accepted') {\r\n      this.nameButtonAccept = action;\r\n    } else {\r\n      this.nameButtonDecline = action;\r\n    }\r\n  }\r\n\r\n  deleteFriend(): void {\r\n    this.userService.deleteFriendFromList(this.userInvite.userIdFrom).subscribe(response => {\r\n      console.log(response);\r\n    })\r\n  }\r\n}\r\n","<div *ngIf=\"!isFriendList; else elseBlock\" class=\"container-fluid my-1\">\r\n  <div  class=\"card flex-fill\"  style=\"color: #2d2d2d;height: 55%\">\r\n    <div class=\"row flex-fill h-auto no-gutters align-items-center\">\r\n      <div class=\"col-4 col-sm-1 col-md-2 col-lg-1 \">\r\n        <img src=\"https://img.icons8.com/plasticine/100/000000/user-male-circle.png\" class=\"card-img rounded-circle\">\r\n        <h5>\r\n          <span class=\"badge bg-primary\">{{userInvite.usernameFrom}}</span>\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"col-2 col-sm-5 col-md-auto col-lg-6 text-center align-self-center\" style=\"font-size: 20px\">\r\n          {{userInvite.inviteText}}\r\n      </div>\r\n      <div class=\"col-12 col-sm-6 col-md-7 col-lg-5 align-self-center\" style=\"color: #2d2d2d;height: 55%\">\r\n        <div class=\"btn-group text-right\">\r\n            <button class=\"btn btn-outline-success\"  [disabled]=\"clicked\" (click)=\"acceptUserInvite(); onInviteAction('Accepted')\">{{nameButtonAccept}}</button>\r\n            <button class=\"btn btn-outline-danger\" [disabled]=\"clicked\" (click)=\"declineUserInvite(); onInviteAction('Declined')\">{{nameButtonDecline}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #elseBlock>\r\n  <div class=\"chip mr-2 mt-2 ml-3\">\r\n    <img src=\"https://img.icons8.com/plasticine/100/000000/user-male-circle.png\" alt=\"Person\" width=\"96\" height=\"96\">\r\n    {{userInvite.usernameFrom}}\r\n    <span class=\"closebtn\"  (click)=\"deleteFriend()\" onclick=\"this.parentElement.style.display='none';\">&times;</span>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from \"../services/user.service\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  title = 'Demo';\r\n  greeting = {};\r\n  constructor( private http: HttpClient, private app: UserService) {\r\n  }\r\n\r\n  authenticated() {\r\n    return this.app.authenticated;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section  class=\"min-vh-100\" id=\"cover\">\r\n  <div class=\"col text-center text-white\">\r\n    <h1>Welcome</h1>\r\n    <div class=\"container\" [hidden]=\"!authenticated()\">\r\n      <h3>Hello</h3>\r\n      <h3>We glad to see you</h3>\r\n    </div>\r\n    <div [hidden]=\"authenticated()\">\r\n      <h3>Login to see your greeting</h3>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpResponse,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoaderService } from '../services/loader.service';\r\n\r\n@Injectable()\r\nexport class LoaderInterceptor implements HttpInterceptor {\r\n  private requests: HttpRequest<any>[] = [];\r\n\r\n  constructor(private loaderService: LoaderService) { }\r\n\r\n  removeRequest(req: HttpRequest<any>) {\r\n    const i = this.requests.indexOf(req);\r\n    if (i >= 0) {\r\n      this.requests.splice(i, 1);\r\n    }\r\n    this.loaderService.isLoading.next(this.requests.length > 0);\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    this.requests.push(req);\r\n\r\n    console.log(\"No of requests--->\" + this.requests.length);\r\n\r\n    this.loaderService.isLoading.next(true);\r\n    return Observable.create(observer => {\r\n      const subscription = next.handle(req)\r\n        .subscribe(\r\n          event => {\r\n            if (event instanceof HttpResponse) {\r\n              this.removeRequest(req);\r\n              observer.next(event);\r\n            }\r\n          },\r\n          err => {\r\n            // alert('error' + err);\r\n            this.removeRequest(req);\r\n            observer.error(err);\r\n          },\r\n          () => {\r\n            this.removeRequest(req);\r\n            observer.complete();\r\n          });\r\n      // remove request from queue when cancelled\r\n      return () => {\r\n        this.removeRequest(req);\r\n        subscription.unsubscribe();\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { Input, Component, OnInit, OnChanges } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.css']\r\n})\r\nexport class NewsComponent implements OnInit, OnChanges {\r\n\r\n  displayURL;\r\n  \r\n  constructor(private sanitizer: DomSanitizer) {\r\n    this.displayURL = this.getSantizeUrl('https://www.youtube.com/embed/cRy5_KpPxyM');\r\n\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.displayURL = this.getSantizeUrl('https://www.youtube.com/embed/cRy5_KpPxyM');\r\n\r\n  }\r\n  sanitizedDisplayUrl() {\r\n    return this.getSantizeUrl('https://www.youtube.com/embed/cRy5_KpPxyM');\r\n  }\r\n\r\n  public getSantizeUrl(url: string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<iframe [src]='displayURL' frameborder=\"1\" style=\"border: 5px solid black\" allowfullscreen></iframe>\r\n","import {FormGroup} from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport class MustMatchValidator {\r\n  static passwordConfirming(form: FormGroup): { [key: string]: boolean} {\r\n    const control = form.controls.password;\r\n    const matchingControl = form.controls.confirmPassword;\r\n    if (control.value !== matchingControl.value) {\r\n      matchingControl.setErrors({ mustMatch: true });\r\n      return {mustMatch: true};\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../entities/user';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MustMatchValidator} from './_helpers/must-match.validator';\r\nimport {Router} from \"@angular/router\";\r\nimport {UserService} from \"../services/user.service\";\r\nimport {HashBcrypt} from '../util/hashBcrypt';\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\n\r\nexport class RegistrationComponent implements OnInit {\r\n  registrationForm: FormGroup;\r\n  user: User = {\r\n    id: '',\r\n    username: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    role: {name: 'user'},\r\n    password: ''\r\n  };\r\nmessage = ''\r\n  constructor(private app: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registrationForm = new FormGroup({\r\n      username: new FormControl(''),\r\n      firstname: new FormControl(''),\r\n      lastname: new FormControl(''),\r\n      email: new FormControl('', [\r\n        Validators.email,\r\n        Validators.required\r\n      ]),\r\n      password: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(3)\r\n      ]),\r\n      confirmPassword: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n      ]),\r\n    }, {validators: MustMatchValidator.passwordConfirming});\r\n  }\r\n\r\n  onSubmit() {\r\n    this.user.username = this.registrationForm.get('username').value;\r\n    this.user.firstName = this.registrationForm.get('firstname').value;\r\n    this.user.lastName = this.registrationForm.get('lastname').value;\r\n    this.user.email = this.registrationForm.get('email').value;\r\n    this.user.password = HashBcrypt.hash(this.registrationForm.get('password').value);\r\n    this.registrationForm.reset();\r\n    this.app.signUp(this.user).subscribe(\r\n      _ => this.router.navigateByUrl('/login'), error => this.message = error.message);\r\n  }\r\n}\r\n","<section   class=\"min-vh-100\" id=\"cover\">\r\n  <div class=\"container\">\r\n    <h1>USER SIGN UP</h1>\r\n\r\n    <div class=\"row text-white\">\r\n      <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"col-lg-11 ml-lg-3 mt-5 alert alert-danger\" [hidden]=\"!message\">\r\n            There was a problem. {{message | json}}.\r\n          </div>\r\n          <div class=\"form-group \">\r\n            <input type=\"text\" formControlName=\"username\"  class=\"form-control text-center\"  placeholder=\"USERNAME\" required maxlength=\"20\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input type=\"text\" formControlName=\"firstname\" class=\"form-control text-center\"  placeholder=\"FIRST NAME\" required maxlength=\"20\">\r\n              <input type=\"text\" formControlName=\"lastname\" class=\"form-control text-center\"  placeholder=\"LAST NAME\" required maxlength=\"20\">\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"email\" formControlName=\"email\" class=\"form-control text-center\"  placeholder=\"EMAIL\" required maxlength=\"50\">\r\n            <div\r\n              *ngIf=\"registrationForm.get('email').invalid && registrationForm.get('email').touched\"\r\n              class=\"validation\">\r\n              <small *ngIf=\"registrationForm.get('email').errors.required\">\r\n                Email cannot be empty\r\n              </small>\r\n              <small *ngIf=\"registrationForm.get('email').errors.email\">\r\n                Please fill in a valid email address\r\n              </small>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input type=\"password\" formControlName=\"password\" class=\"form-control text-center\" placeholder=\"PASSWORD\" required maxlength=\"20\">\r\n              <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control text-center\" placeholder=\"CONFIRM PASSWORD\" required maxlength=\"20\">\r\n            </div>\r\n            <div\r\n              *ngIf=\"registrationForm.get('password').invalid && registrationForm.get('password').touched\"\r\n              class=\"validation\">\r\n              <small *ngIf=\"registrationForm.get('password').errors.required\">\r\n                Password cannot be empty\r\n              </small>\r\n              <small *ngIf=\"registrationForm.get('password').errors.minlength\">\r\n                Password must be at least {{registrationForm.get('password').errors.minlength.requiredLength}} characters long\r\n              </small>\r\n            </div>\r\n\r\n            <div\r\n              *ngIf=\"registrationForm.get('confirmPassword').invalid && registrationForm.get('confirmPassword').touched\"\r\n              class=\"validation\">\r\n              <small *ngIf=\"registrationForm.get('confirmPassword').errors.required\">\r\n                Confirm Password is required\r\n              </small>\r\n              <small *ngIf=\"registrationForm.get('confirmPassword').errors.mustMatch\">\r\n                Passwords must match\r\n              </small>\r\n            </div>\r\n          </div>\r\n<!--          <div class=\"form-group\">-->\r\n<!--&lt;!&ndash;            <div class=\"form-check \">&ndash;&gt;-->\r\n<!--&lt;!&ndash;              <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"checkAgreement\" required id=\"autoSizingCheck2\">&ndash;&gt;-->\r\n<!--&lt;!&ndash;              <label class=\"form-check-label\" for=\"autoSizingCheck2\"> I agree to the BrainDuel Terms of Service and policy</label>&ndash;&gt;-->\r\n<!--&lt;!&ndash;              <div class=\"validation\" *ngIf=\"registrationForm.get('checkAgreement').invalid\">&ndash;&gt;-->\r\n<!--&lt;!&ndash;                You need to read and accept T & C&ndash;&gt;-->\r\n<!--&lt;!&ndash;              </div>&ndash;&gt;-->\r\n<!--&lt;!&ndash;            </div>&ndash;&gt;-->\r\n\r\n<!--              <div class=\"form-check \">-->\r\n<!--                <label class=\"form-check-label\" for=\"autoSizingCheck2\">-->\r\n<!--                  <input class=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck2\">-->\r\n<!--                  I agree to the BrainDuel Terms of Service and policy-->\r\n<!--                </label>-->\r\n<!--              </div>-->\r\n<!--          </div>-->\r\n          <button  class=\"btn btn-secondary btn-lg\" type=\"submit\" [disabled]=\"registrationForm.invalid\">SIGN UP</button>\r\n        </form>\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n\r\n</section>\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n  public isLoading = new BehaviorSubject(false);\r\n  constructor() { }\r\n}\r\n","import {Injectable, OnInit} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {User} from \"../entities/user\";\r\nimport {Observable, of, throwError} from \"rxjs\";\r\nimport {catchError, tap, finalize} from \"rxjs/operators\";\r\nimport {Router} from \"@angular/router\";\r\nimport {UserInvite} from '../entities/user-invite';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  authenticated = localStorage.getItem('user') ? true : false;\r\n  user: User = JSON.parse(localStorage.getItem('user'));\r\n\r\n  private userUrl = 'http://localhost:8080/api/user';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n  getToken() {\r\n    return this.user.token;\r\n  }\r\n\r\n  getUser(user: User): Observable<User> {\r\n    return this.http.get<User>(this.userUrl + `/get/${user.id}`, { headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n      catchError(this.handleError<any>('getUser'))\r\n    );\r\n  }\r\n  updateUser(user: User) {\r\n    return this.http.put<User>(this.userUrl + '/update', user,{ headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n      catchError(this.handleError<any>('signUp'))\r\n    );\r\n  }\r\n  createUser(user: User) {\r\n    return this.http.post<User>(this.userUrl + '/create', user, { headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n      catchError(this.handleError<any>('signUp'))\r\n    );\r\n  }\r\n  deleteUser(user: User) {\r\n    return this.http.delete<User>(this.userUrl + `/delete/${user.id}`,{ headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n      catchError(this.handleError<any>('signUp'))\r\n    );\r\n  }\r\n  signUp(user: User): Observable<any> {\r\n    return this.http.post<User>('http://localhost:8080/api/sign-up', user,{\r\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n      responseType: 'json'\r\n    }).pipe(\r\n      catchError(this.handleError<any>('signUp'))\r\n    );\r\n\r\n  }\r\n\r\n  login(user): Observable<User> {\r\n    return this.http.post<any>('http://localhost:8080/api/login', user).pipe(\r\n      tap(response => {\r\n        this.user = response;\r\n        localStorage.setItem('user', JSON.stringify(response));\r\n        this.authenticated = true}),\r\n      catchError(this.handleError<any>('login'))\r\n    );\r\n  }\r\n  logout() {\r\n    return this.http.post<User>('http://localhost:8080/api/logout', this.user, { headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(finalize(() => {\r\n      this.authenticated = false; localStorage.removeItem('user'); this.router.navigateByUrl('/login')\r\n    }), catchError(this.handleError<any>('logout')))\r\n  }\r\n\r\n  private handleError<T>(operation= 'operation') {\r\n    return (error: any): Observable<T> => {\r\n      console.log(operation + ' ' + error);\r\n      return throwError(error);\r\n    };\r\n  }\r\n  searchUsers(roleId: number, term: string): Observable<User[]> {\r\n    if (!term.trim()) {\r\n      return of([]);\r\n    }\r\n    return this.http.get<User[]>(this.userUrl + `/search/${roleId}/${term}`, { headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n      catchError(error => {return of([])})\r\n    );\r\n  }\r\n\r\n  sendUserInvite(userInvite: UserInvite): Observable<UserInvite> {\r\n    console.log(\"sent invite\");\r\n    console.log(userInvite);\r\n    return this.http.post<UserInvite>(this.userUrl + '/invite/send', userInvite, { headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n        tap(response => {\r\n          console.log(response);\r\n        }),\r\n      catchError(this.handleError<any>('sendUserInvite'))\r\n    );\r\n  }\r\n\r\n  getUserInvite(): Observable<UserInvite[]> {\r\n    return this.http.get<UserInvite[]>(this.userUrl + '/invite/' + this.user.id, { headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n      tap(response => {\r\n        console.log(response);\r\n      }),\r\n      catchError(this.handleError<any>('sendUserInvite'))\r\n    );\r\n  }\r\n\r\n  acceptUserInvite(id) {\r\n    return this.http.put<UserInvite>(this.userUrl + '/invite/' + id, id, { headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n      tap(response => {\r\n        console.log(response);\r\n      }),\r\n      catchError(this.handleError<any>('acceptUserInvite')))\r\n  }\r\n\r\n  declineUserInvite(id) {\r\n    return this.http.delete<UserInvite>(this.userUrl + '/invite/' + id, { headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n      tap(response => {\r\n        console.log(response);\r\n      }),\r\n      catchError(this.handleError<any>('declineUserInvite')))\r\n  }\r\n\r\n  getFriendsList(): Observable<UserInvite[]> {\r\n    return this.http.get<UserInvite[]>(this.userUrl + '/invite/friends/' + this.user.id, { headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n      tap(response => {\r\n        console.log(response);\r\n      }),\r\n      catchError(this.handleError<any>('getFriendsList'))\r\n    );\r\n  }\r\n\r\n  deleteFriendFromList(id) {\r\n    return this.http.delete<UserInvite>(this.userUrl + '/invite/friends/'+ this.user.id + '/' + id, { headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n      tap(response => {\r\n        console.log(response);\r\n      }),\r\n      catchError(this.handleError<any>('deleteFriendFromList')))\r\n  }\r\n\r\n  setStatus(stausId, userId) {\r\n    return this.http.post(this.userUrl + `/status/${stausId}/${userId}`, undefined, { headers: new HttpHeaders()\r\n        .set('Authorization',  `Bearer_${this.getToken()}`)}).pipe(\r\n      tap(response => {\r\n      }),\r\n      catchError(this.handleError<any>('sendUserInvite'))\r\n    );\r\n\r\n  }\r\n}\r\n","\r\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {UserService} from \"../services/user.service\";\r\nimport {User} from '../entities/user';\r\nimport {UserInvite} from \"../entities/user-invite\";\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-card',\r\n  templateUrl: './user-card.component.html',\r\n  styleUrls: ['./user-card.component.css']\r\n})\r\nexport class UserCardComponent implements OnInit {\r\n  @Input()\r\n  user: User;\r\n  @Output()\r\n  onChanged = new EventEmitter<User>();\r\n  inviteForm = new FormGroup({\r\n    'inviteText' : new FormControl(null, [\r\n      Validators.required,\r\n      Validators.minLength(4)\r\n    ]),\r\n  });\r\n  name: string = this.userService.user.firstName;\r\n\r\n  nameSendButton = 'Send invitation';\r\n  clicked: boolean = false;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  goToProfile() {\r\n    this.onChanged.emit(this.user);\r\n  }\r\n  userRole() {\r\n    return this.userService.user.role.name;\r\n  }\r\n\r\n  sendInvite() {\r\n    this.clicked = true;\r\n    this.nameSendButton = 'Invitation was sent';\r\n    this.userService.sendUserInvite({\r\n      inviteText: this.inviteForm.get('inviteText').value,\r\n      userIdFrom: +this.userService.user.id,\r\n      userIdTo: +this.user.id,\r\n    } as UserInvite).subscribe(data  => {\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"container-fluid my-1\">\r\n  <div class=\"card flex-fill\"  style=\"color: #2d2d2d;height: 55%\">\r\n    <div class=\"row flex-fill h-auto no-gutters align-items-center\">\r\n      <div class=\"col-4 col-sm-1 col-md-2 col-lg-1 \">\r\n        <img src=\"https://img.icons8.com/plasticine/100/000000/user-male-circle.png\" class=\"card-img rounded-circle\">\r\n        <h5>\r\n          <span class=\"badge bg-primary\" style=\"color: white;\">{{user.username}}</span>\r\n        </h5>\r\n\r\n      </div>\r\n        <div class=\"col-2 col-sm-5 col-md-auto col-lg-6 text-center align-self-center\">\r\n          <div *ngIf=\"userRole() ==='user'\" class=\"input-group justify-content-center\">\r\n            <form [formGroup]=\"inviteForm\" novalidate>\r\n              <input id=\"message\" class=\"form-control\" formControlName=\"inviteText\" required placeholder=\"Invite message*\" aria-label=\"Invite message\" aria-describedby=\"basic-addon2\">\r\n            </form>\r\n            <div class=\"input-group-append mr-5\">\r\n              <button [disabled]=\"inviteForm.invalid\" type=\"submit\" class=\"btn btn-primary\" (click)=\"sendInvite()\">{{nameSendButton}}</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"btn-group text-right\">\r\n            <!--            <a *ngIf=\"userRole() ==='user'\" href=\"#\" class=\"btn  btn-outline-danger\">Unfollow</a>-->\r\n            <a *ngIf=\"userRole() ==='super admin' || userRole() ==='admin' || userRole() ==='moderator'\" (click)=\"goToProfile()\" class=\"btn  btn-outline-primary\">Edit profile</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12 col-sm-6 col-md-7 col-lg-5\">\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item\">First name: {{user.firstName}}</li>\r\n              <li class=\"list-group-item\">Last name: {{user.lastName}}</li>\r\n              <li class=\"list-group-item\">Email: {{user.email}}</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, ContentChild, Input, OnInit} from '@angular/core';\r\nimport {UserService} from \"../services/user.service\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport { User } from '../entities/user';\r\nimport { Router } from '@angular/router';\r\nimport {DashboardComponent} from \"../dashboard/dashboard.component\";\r\nimport {MustMatchValidator} from \"../registration/_helpers/must-match.validator\";\r\nimport {HashBcrypt} from \"../util/hashBcrypt\";\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n  @Input()\r\n  user: User;\r\n\r\n  @Input()\r\n  editOnly = false;\r\n\r\n  error = '';\r\n  message = '';\r\n\r\n  userForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setUserForm();\r\n  }\r\n  userRole() {\r\n    return this.userService.user.role.name;\r\n  }\r\n\r\n  private setUserForm() {\r\n    this.userForm = this.fb.group({\r\n      firstname: [this.user.firstName, [Validators.required, Validators.minLength(3)]],\r\n      lastname: [this.user.lastName, [Validators.required, Validators.minLength(3)]],\r\n      email: [this.user.email, [Validators.required, Validators.minLength(3), Validators.email]],\r\n      username: [this.user.username, [Validators.required, Validators.minLength(3)]],\r\n      password: ['', [Validators.required, Validators.minLength(3)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(3)]],\r\n      role: [{value: null, disabled: this.userRole() === 'super admin' ? false : true}]\r\n    } );\r\n    this.setProperties();\r\n  }\r\n  private setProperties(): void {\r\n    if (this.editOnly) {\r\n      this.userForm.setValidators(MustMatchValidator.passwordConfirming);\r\n    } else {\r\n     this.userForm.clearValidators();\r\n     this.userForm.get('confirmPassword').clearValidators();\r\n     this.userForm.get('password').clearValidators();\r\n    }\r\n    this.userForm.updateValueAndValidity();\r\n  }\r\n  add() {\r\n    this.clearMessages();\r\n    this.setMaininfo();\r\n    this.user.password = HashBcrypt.hash(this.userForm.get('password').value);\r\n    this.user.role.name = this.userRole() === 'admin' ? 'moderator' : this.userForm.get('role').value;\r\n    this.userService.createUser(this.user).subscribe(\r\n      response => {this.message = 'User has been added!';},\r\n      error => {this.error = error.message});\r\n  }\r\n\r\n  update() {\r\n    this.clearMessages();\r\n    this.setMaininfo();\r\n    this.user.password = this.checkPassword();\r\n    if(!this.error) {\r\n      this.userService.updateUser(this.user).subscribe(\r\n        response => {this.user = response; this.message = 'User has been updated!'},\r\n        error => {this.error = error.message});\r\n    }\r\n  }\r\n  private setMaininfo() {\r\n    this.user.firstName = this.userForm.get('firstname').value;\r\n    this.user.lastName = this.userForm.get('lastname').value;\r\n    this.user.email = this.userForm.get('email').value;\r\n    this.user.username = this.userForm.get('username').value;\r\n  }\r\n  private clearMessages() {\r\n    this.error = '';\r\n    this.message = '';\r\n  }\r\n  private checkPassword() {\r\n    if(this.userForm.get('password').dirty && this.userForm.get('confirmPassword').dirty) {\r\n      if(HashBcrypt.compare(this.userForm.get('confirmPassword').value, this.userService.user.password)){\r\n        return HashBcrypt.hash(this.userForm.get('password').value);\r\n      }\r\n      this.error = 'Password incorrect';\r\n    } else {\r\n      return this.user.password;\r\n    }\r\n  }\r\n  clearPass() {\r\n    this.userForm.get('password').reset();\r\n    this.userForm.get('confirmPassword').reset();\r\n  }\r\n  delete() {\r\n    this.clearMessages();\r\n    this.userService.deleteUser(this.user).subscribe(response => {this.message = 'User has been deleted!';\r\n    this.userRole() === 'user' ? this.userService.logout().subscribe(\r\n      resp => {},error => this.error = error.message) : this.router.navigateByUrl('dashboard/AddProfile')},\r\n      error => { this.error = error.message});\r\n  }\r\n  submit() {\r\n  }\r\n\r\n  setStatus(statusId) {\r\n    this.clearMessages();\r\n    this.user.status.id = statusId;\r\n    this.userService.setStatus(statusId, this.user.id).\r\n    subscribe(response => {this.message = 'User has been edited!'},\r\n      error => { this.error = error.error});\r\n  }\r\n}\r\n","<section class=\"min-vh-100\" style=\"margin-top: 100px;\">\r\n  <link href=\"https://fonts.googleapis.com/css2?family=Quicksand&display=swap\" rel=\"stylesheet\">\r\n  <div class=\"container\">\r\n    <div class=\"row my-2\">\r\n      <div class=\"col-lg-4 order-lg-1 text-center\">\r\n        <img src=\"https://img.icons8.com/plasticine/100/000000/user-male-circle.png\" width=\"150\" height=\"150\" class=\"mx-auto img-fluid img-circle d-block\" alt=\"avatar\">\r\n      </div>\r\n      <div class=\"col-lg-8 order-lg-2\">\r\n        <ul class=\"nav nav-tabs\">\r\n          <li *ngIf=\"!editOnly\" class=\"nav-item\">\r\n            <a  data-target=\"#profile\" data-toggle=\"tab\" class=\"nav-link active show\">Profile</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a  data-target=\"#edit\" data-toggle=\"tab\" class=\"nav-link\" [class.active]=\"editOnly\">Edit</a>\r\n          </li>\r\n        </ul>\r\n        <div  class=\"tab-content py-4\">\r\n          <div *ngIf=\"!editOnly\" class=\"tab-pane active show\" id=\"profile\">\r\n            <h5 class=\"mb-3\">{{user.role.name | uppercase}} PROFILE</h5>\r\n            <div class=\"col\">\r\n              <div class=\"col-md-6\">\r\n                <h6>{{user.username}}</h6>\r\n                <p>\r\n                  {{user.firstName}}, {{user.lastName}}\r\n                </p>\r\n                <h6>{{user.email}}</h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane\" [class.active]=\"editOnly\" id=\"edit\">\r\n            <form [formGroup]=\"userForm\" role=\"form\" (ngSubmit)=\"submit()\">\r\n              <div class=\"form-group row\">\r\n                <div class=\"col-lg-11 ml-lg-3 alert alert-danger\" [hidden]=\"!error\">\r\n                  There was a problem. {{error}}.\r\n                </div>\r\n                <div class=\"col-lg-11 ml-lg-3 alert alert-success\" [hidden]=\"!message\">\r\n                  {{message}}\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-lg-3 col-form-label form-control-label\">First name</label>\r\n                <div class=\"col-lg-9\">\r\n                  <input class=\"form-control\" formControlName=\"firstname\" type=\"text\" >\r\n                </div>\r\n                <div *ngIf=\"userForm.get('firstname').invalid && userForm.get('firstname').touched\" class=\"validation\">\r\n                  <small *ngIf=\"userForm.get('firstname').errors.required\">\r\n                    First name cannot be empty\r\n                  </small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-lg-3 col-form-label form-control-label\">Last name</label>\r\n                <div class=\"col-lg-9\">\r\n                  <input class=\"form-control\" formControlName=\"lastname\" type=\"text\" required>\r\n                </div>\r\n                <div *ngIf=\"userForm.get('lastname').invalid && userForm.get('lastname').touched\" class=\"validation\">\r\n                  <small *ngIf=\"userForm.get('lastname').errors.required\">\r\n                    Last name cannot be empty\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                <div class=\"col-lg-9\">\r\n                  <input class=\"form-control\" formControlName=\"email\" type=\"email\" email>\r\n                </div>\r\n                <div *ngIf=\"userForm.get('email').invalid && userForm.get('email').touched\" class=\"validation\">\r\n                  <small *ngIf=\"userForm.get('email').errors.email\">\r\n                    Please fill in a valid email address\r\n                  </small>\r\n                  <small *ngIf=\"userForm.get('email').errors.required\">\r\n                    Email name cannot be empty\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-lg-3 col-form-label form-control-label\">Username</label>\r\n                <div class=\"col-lg-9\">\r\n                  <input class=\"form-control\" formControlName=\"username\" type=\"text\" >\r\n                </div>\r\n                <div *ngIf=\"userForm.get('username').invalid && userForm.get('username').touched\" class=\"validation\">\r\n                  <small *ngIf=\"userForm.get('username').errors.required\">\r\n                    Username name cannot be empty\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"editOnly\" class=\"form-group row\">\r\n                <label class=\"col-lg-3 col-form-label form-control-label\">Password</label>\r\n                <div class=\"col-lg-9\">\r\n                  <input class=\"form-control\" formControlName=\"password\" type=\"password\" >\r\n                </div>\r\n                <div *ngIf=\"userForm.get('password').invalid && userForm.get('password').touched\" class=\"validation\">\r\n                  <small *ngIf=\"userForm.get('password').errors.required\">\r\n                    Password cannot be empty\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"editOnly\" class=\"form-group row\">\r\n                <label class=\"col-lg-3 col-form-label form-control-label\">Confirm password</label>\r\n                <div class=\"col-lg-9\">\r\n                  <input class=\"form-control\" formControlName=\"confirmPassword\" type=\"password\" >\r\n                </div>\r\n                <div *ngIf=\"userForm.get('confirmPassword').invalid && userForm.get('confirmPassword').touched\" class=\"validation\">\r\n                  <small *ngIf=\"userForm.get('confirmPassword').errors.required\">\r\n                    This field cannot be empty\r\n                  </small>\r\n                  <small *ngIf=\"userForm.get('confirmPassword').errors.mustMatch\">\r\n                    Passwords must match\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"editOnly && userRole()==='super admin'\" class=\"form-group row\">\r\n                <div class=\"form-check\">\r\n                  <label class=\"col-lg-7  form-check-label\" for=\"gridRadios1\">\r\n                    Admin\r\n                    <input class=\"form-check-input \" type=\"radio\" name=\"role\" id=\"gridRadios1\" value=\"admin\" formControlName=\"role\" >\r\n                  </label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <label class=\"form-check-label col-lg-7\" for=\"gridRadios2\">\r\n                    Moderator\r\n                    <input class=\"form-check-input \" type=\"radio\" name=\"role\" id=\"gridRadios2\" value=\"moderator\" formControlName=\"role\" >\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"(!editOnly && userRole() !== 'moderator')\" class=\"form-group row\">\r\n                <div class=\"col\">\r\n                  <div class=\"row\">\r\n                    <button class=\"btn btn-warning col-5\" (click)=\"clearPass()\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                      Set new password\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"collapse w-100\" id=\"collapseExample\">\r\n                      <label class=\"col-md-5 col-lg-5 col-form-label form-control-label\">Current password of your {{this.userRole()}} account</label>\r\n                      <div class=\"col-lg-7\">\r\n                        <input class=\"form-control w-100\" formControlName=\"confirmPassword\"  type=\"password\" >\r\n                      </div>\r\n                      <label class=\" col-md-5 col-lg-5 col-form-label form-control-label\">New password for this {{user.role.name}} account</label>\r\n                      <div class=\"col-md-7 col-lg-7\">\r\n                        <input class=\"form-control w-100\" formControlName=\"password\" type=\"password\" >\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                <div class=\"col-lg-12\">\r\n                  <input  *ngIf=\"(!editOnly && userRole() !== 'moderator')\" [disabled]=\"userForm.invalid\" name=\"button_1\" type=\"submit\" class=\"btn btn-primary\" (click)=\"update()\" value=\"Save Changes\">\r\n                  <input *ngIf=\"(!editOnly && user.role.name ==='admin' || user.role.name ==='moderator' || user.role.name ==='user') && userRole() !== 'user' && user.status.id == 2\" name=\"button_2\"  class=\"btn btn-danger ml-sm-2\" (click)=\"setStatus(3)\" value=\"Deactivate Account\">\r\n                  <input *ngIf=\"(!editOnly && user.role.name ==='admin' || user.role.name ==='moderator' || user.role.name ==='user') && userRole() !== 'user' && user.status.id == 3\" name=\"button_2\"  class=\"btn btn-success ml-sm-2\" (click)=\"setStatus(2)\" value=\"Activate Account\">\r\n                  <input *ngIf=\"!editOnly && userRole() === 'super admin'\" name=\"button_2\" type=\"submit\" class=\"btn btn-danger ml-sm-2 mt-5\" (click)=\"delete()\" value=\"Delete Account\">\r\n                  <input *ngIf=\"editOnly\" [disabled]=\"userForm.invalid\" type=\"submit\" name=\"button_3\" class=\"btn btn-success mt-lg-3\" (click)=\"add()\"  value=\"Add\">\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n\r\n","import * as bcrypt from 'bcryptjs';\r\nimport has = Reflect.has;\r\n\r\nexport class HashBcrypt {\r\n\r\n  static hash(value: string, rounds?: number): string {\r\n    const salt = bcrypt.genSaltSync(rounds ? rounds : 10);\r\n    return bcrypt.hashSync(value, salt);\r\n  }\r\n  static compare(pass: string, hash: string): boolean {\r\n    return bcrypt.compareSync(pass, hash);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}